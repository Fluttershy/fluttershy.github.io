{"version":3,"sources":["icecube/Utils.tsx","icecube/GameStore.ts","icecube/GameCache.tsx","icecube/Cube.tsx","icecube/Level.tsx","icecube/Animation.tsx","icecube/GameControls.tsx","icecube/Game.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["generateGroundCubes","generateBlocksCubes","useKey","key","React","pressed","setPressed","console","log","match","event","toLowerCase","onDown","onUp","window","addEventListener","removeEventListener","width","depth","xMin","Math","floor","xMax","x","z","uuid","uuidv4","type","position","Vector3","rotation","Quaternion","scale","selected","types","length","replaceStateArrayItem","stateArray","index","selector","slice","vector3One","useGameStore","create","set","get","step","player","y","ground","Array","from","blocks","setCubeGeometry","geometry","cubeGeometry","setGroundMaterial","material","groundMaterial","setNormalMaterial","normalMaterial","setSpecialMaterial","specialMaterial","setSteelMaterial","steelMaterial","setBombMaterial","bombMaterial","containsGround","some","equals","containsBlock","groundAt","find","blockAt","getBomb","canExplode","cube","reset","state","map","tryMovePlayer","direction","moveTo","vector3Offset","axis","angle","MathUtils","degToRad","frames","vector3Lerp","quaternionSlerp","quaternionAxisAngle","animation","duration","onFrame","value","forEach","onRest","placeBomb","indexOf","block","checks","current","shift","push","pushIf","scaleTo","offset","to","start","clone","lerpVectors","multiply","setFromAxisAngle","original","copy","slerp","array","item","validator","GameCache","props","s","useResource","cubeGeometryRef","groundMaterialRef","normalMaterialRef","specialMaterialRef","steelMaterialRef","bombMaterialRef","effectLoader","ref","args","color","transparent","wireframe","children","object","setter","Cube","mesh","setMaterial","useFrame","quaternion","Level","Animation","useSpring","config","opacity","GameControls","wPressed","aPressed","sPressed","dPressed","spacePressed","extend","OrbitControls","OrbitControlsElement","controls","useThree","camera","domElement","gl","update","Game","App","className","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6bb53ef8.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Vector3, Quaternion } from 'three';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CubeProps } from './Cube';\n\nexport function useKey(key: string) {\n  const [pressed, setPressed] = React.useState(false);\n\n  React.useEffect(() => {\n    console.log('[useKey] useEffect');\n\n    // Does an event match the key we're watching?\n    const match = (event: KeyboardEvent) => key.toLowerCase() === event.key.toLowerCase();\n\n    // Event handlers\n    const onDown = (event: KeyboardEvent) => {\n      if (match(event)) setPressed(true);\n    }\n\n    const onUp = (event: KeyboardEvent) => {\n      if (match(event)) setPressed(false);\n    }\n\n    window.addEventListener(\"keydown\", onDown);\n    window.addEventListener(\"keyup\", onUp);\n\n    return () => {\n      window.removeEventListener(\"keydown\", onDown);\n      window.removeEventListener(\"keyup\", onUp);\n    }\n  }, [key, setPressed]);\n\n  return pressed;\n}\n\nexport function* generateGroundCubes(width: number, depth: number): Generator<CubeProps, void, unknown> {\n  let xMin = -Math.floor(width / 2);\n  let xMax = xMin + width;\n\n  for (let x = xMin; x < xMax; x++) {\n    for (let z = 0; z < depth; z++) {\n      yield {\n        uuid: uuidv4(),\n        type: 'gr',\n        position: new Vector3(x, 0, -z),\n        rotation: new Quaternion(0, 0, 0, 1),\n        scale: new Vector3(1, 1, 1),\n        selected: false\n      };\n    }\n  }\n}\n\nexport function* generateBlocksCubes(width: number, depth: number, types: string[][]): Generator<CubeProps, void, unknown> {\n  let xMin = -Math.floor(width / 2);\n\n  for (let z = 0; z < types.length; z++) {\n    for (let x = 0; x < types[z].length; x++) {\n      yield {\n        uuid: uuidv4(),\n        type: types[z][x],\n        position: new Vector3(xMin + x, 0, -(depth - 1 - z)),\n        rotation: new Quaternion(0, 0, 0, 1),\n        scale: new Vector3(1, 1, 1),\n        selected: false\n      };\n    }\n  }\n}\n\nexport function generatePlayer(x: number, y: number, z: number): CubeProps {\n  return {\n    uuid: uuidv4(),\n    type: 'pl',\n    position: new Vector3(x, y, z),\n    rotation: new Quaternion(0, 0, 0, 1),\n    scale: new Vector3(1, 1, 1),\n    selected: false\n  };\n}\n\nexport function replaceStateArrayItem<T>(stateArray: T[], index: number, selector: (item: T) => T) {\n  return [\n    ...stateArray.slice(0, index),\n    selector(stateArray[index]),\n    ...stateArray.slice(index + 1)\n  ];\n}","import { BoxBufferGeometry, MeshStandardMaterial, Vector3, Quaternion, MathUtils } from 'three';\nimport create from 'zustand'\nimport { AnimationProps } from './Animation';\nimport { CubeProps } from './Cube';\nimport { generateGroundCubes, generateBlocksCubes, generatePlayer, replaceStateArrayItem } from './Utils';\n\nexport type GameStoreType = {\n  step: number;\n  player: CubeProps;\n  ground: CubeProps[];\n  blocks: CubeProps[];\n\n  cubeGeometry?: BoxBufferGeometry;\n  groundMaterial?: MeshStandardMaterial;\n  normalMaterial?: MeshStandardMaterial;\n  specialMaterial?: MeshStandardMaterial;\n  steelMaterial?: MeshStandardMaterial;\n  bombMaterial?: MeshStandardMaterial;\n  animation?: AnimationProps;\n\n  setCubeGeometry: (geometry: BoxBufferGeometry) => void;\n  setGroundMaterial: (material: MeshStandardMaterial) => void;\n  setNormalMaterial: (material: MeshStandardMaterial) => void;\n  setSpecialMaterial: (material: MeshStandardMaterial) => void;\n  setSteelMaterial: (material: MeshStandardMaterial) => void;\n  setBombMaterial: (material: MeshStandardMaterial) => void;\n\n  containsGround: (position: Vector3) => boolean;\n  containsBlock: (position: Vector3) => boolean;\n  groundAt: (position: Vector3) => CubeProps;\n  blockAt: (position: Vector3) => CubeProps;\n  getBomb: () => CubeProps | undefined;\n  canExplode: (cube: CubeProps) => boolean;\n\n  reset: () => void;\n  tryMovePlayer: (direction: [number, number, number]) => boolean;\n  placeBomb: () => boolean;\n};\n\nconst vector3One = new Vector3(1, 1, 1);\n\nexport const useGameStore = create<GameStoreType>((set, get) => ({\n  step: 2,\n  player: generatePlayer(0, 0, 0),\n  ground: Array.from(generateGroundCubes(5, 10)),\n  blocks: Array.from(generateBlocksCubes(5, 10, [\n    ['no', 'no', 'no', 'no', 'no'],\n    ['st', 'sp', 'no', 'st', 'st']\n  ])),\n\n  setCubeGeometry: (geometry: BoxBufferGeometry) => set({ cubeGeometry: geometry }),\n  setGroundMaterial: (material: MeshStandardMaterial) => set({ groundMaterial: material }),\n  setNormalMaterial: (material: MeshStandardMaterial) => set({ normalMaterial: material }),\n  setSpecialMaterial: (material: MeshStandardMaterial) => set({ specialMaterial: material }),\n  setSteelMaterial: (material: MeshStandardMaterial) => set({ steelMaterial: material }),\n  setBombMaterial: (material: MeshStandardMaterial) => set({ bombMaterial: material }),\n\n  containsGround: (position: Vector3) => get().ground.some(x => x.position.equals(position) && x.scale.equals(vector3One)),\n  containsBlock: (position: Vector3) => get().blocks.some(x => x.position.equals(position) && x.scale.equals(vector3One)),\n  groundAt: (position: Vector3) => get().ground.find(x => x.position.equals(position) && x.scale.equals(vector3One))!,\n  blockAt: (position: Vector3) => get().blocks.find(x => x.position.equals(position) && x.scale.equals(vector3One))!,\n  getBomb: () => get().ground.find(x => x.selected),\n  canExplode: (cube: CubeProps) => cube.type !== 'st',\n\n  reset: () => {\n    const state = get();\n    set({\n      ground: state.ground.map(x => ({\n        ...x,\n        rotation: new Quaternion(0, 0, 0, 1),\n        scale: new Vector3(1, 1, 1),\n        selected: false\n      })),\n      player: {\n        ...state.player,\n        position: new Vector3(0, 0, 0),\n        rotation: new Quaternion(0, 0, 0, 1),\n        scale: new Vector3(1, 1, 1),\n        selected: false\n      }\n    });\n  },\n\n  tryMovePlayer: (direction: [number, number, number]) => {\n    const state = get();\n    const moveTo = vector3Offset(state.player.position, direction);\n    if (state.containsGround(moveTo) && !state.containsBlock(moveTo)) {\n      const step = state.step - 1;\n      const axis = new Vector3(-1, 0, 0);\n      const angle = MathUtils.degToRad(-90);\n      const frames = step !== 0\n        ? [vector3Lerp(state.player.position, moveTo)]\n        : [\n          vector3Lerp(state.player.position, moveTo),\n          ...state.blocks.map(x => vector3Lerp(x.position, vector3Offset(x.position, [0, 0, 1]))),\n          ...state.blocks.map(x => quaternionSlerp(x.rotation, quaternionAxisAngle(x.rotation, axis, angle)))\n        ];\n      set({\n        step: step === 0 ? 2 : step,\n        animation: {\n          duration: 250,\n          onFrame: (value: number) => frames.forEach(x => x(value)),\n          onRest: () => {\n            set({ animation: null! });\n          }\n        }\n      });\n      return true;\n    }\n    return false;\n  },\n\n  placeBomb: () => {\n    const state = get();\n    const cube = state.getBomb() ?? state.groundAt(state.player.position);\n    const index = state.ground.indexOf(cube);\n    if (cube.selected) {\n      const block = state.blockAt(cube.position);\n      if (block && state.canExplode(block)) {\n        const blocks: CubeProps[] = [];\n        const checks = [block];\n        while (checks.length > 0) {\n          const current = checks.shift()!;\n          blocks.push(current);\n          if (current.type === 'sp') {\n            pushIf(checks, state.blockAt(vector3Offset(block.position, [-1, 0, 0])), x => x && state.canExplode(x));\n            pushIf(checks, state.blockAt(vector3Offset(block.position, [1, 0, 0])), x => x && state.canExplode(x));\n            pushIf(checks, state.blockAt(vector3Offset(block.position, [0, 0, -1])), x => x && state.canExplode(x));\n            pushIf(checks, state.blockAt(vector3Offset(block.position, [0, 0, 1])), x => x && state.canExplode(x));\n            pushIf(checks, state.blockAt(vector3Offset(block.position, [-1, 0, -1])), x => x && state.canExplode(x));\n            pushIf(checks, state.blockAt(vector3Offset(block.position, [1, 0, -1])), x => x && state.canExplode(x));\n            pushIf(checks, state.blockAt(vector3Offset(block.position, [1, 0, -1])), x => x && state.canExplode(x));\n            pushIf(checks, state.blockAt(vector3Offset(block.position, [-1, 0, 1])), x => x && state.canExplode(x));\n          }\n        }\n        const scaleTo = new Vector3(0, 0, 0);\n        const axis = new Vector3(0, 1, 0);\n        const angle = MathUtils.degToRad(359);\n        const frames = [\n          ...blocks.map(x => vector3Lerp(x.scale, scaleTo)),\n          ...blocks.map(x => quaternionSlerp(x.rotation, quaternionAxisAngle(x.rotation, axis, angle)))\n        ];\n        set({\n          animation: {\n            duration: 250,\n            onFrame: (value: number) => frames.forEach(x => x(value)),\n            onRest: () => {\n              set({ animation: null! });\n            }\n          }\n        });\n      }\n    }\n    set({ ground: replaceStateArrayItem(state.ground, index, x => ({ ...x, selected: !x.selected })) });\n    return !cube.selected;\n  }\n}));\n\nfunction vector3Offset(from: Vector3, offset: [number, number, number]) {\n  return new Vector3(from.x + offset[0], from.y + offset[1], from.z + offset[2]);\n}\n\nfunction vector3Lerp(from: Vector3, to: Vector3) {\n  const start = from.clone();\n  return (value: number) => {\n    from.lerpVectors(start, to, value);\n  };\n}\n\nfunction quaternionAxisAngle(from: Quaternion, axis: Vector3, angle: number) {\n  return from.clone().multiply(new Quaternion().setFromAxisAngle(axis, angle));\n}\n\nfunction quaternionSlerp(from: Quaternion, to: Quaternion) {\n  const start = from.clone();\n  const original = from.clone();\n  return (value: number) => {\n    from.copy(start.slerp(to, value));\n    start.copy(original);\n  };\n}\n\nfunction pushIf(array: any[], item: any, validator: (item: any) => boolean) {\n  if (validator(item)) array.push(item);\n}","import * as React from 'react';\nimport { BoxBufferGeometry, MeshStandardMaterial } from 'three';\nimport { useResource } from 'react-three-fiber';\nimport { useGameStore } from './GameStore';\n\nexport type GameCacheProps = React.PropsWithChildren<{}>;\n\nexport const GameCache = (props: GameCacheProps) => {\n  const setCubeGeometry = useGameStore(s => s.setCubeGeometry);\n  const setGroundMaterial = useGameStore(s => s.setGroundMaterial);\n  const setNormalMaterial = useGameStore(s => s.setNormalMaterial);\n  const setSpecialMaterial = useGameStore(s => s.setSpecialMaterial);\n  const setSteelMaterial = useGameStore(s => s.setSteelMaterial);\n  const setBombMaterial = useGameStore(s => s.setBombMaterial);\n  const [cubeGeometryRef, cubeGeometry] = useResource<BoxBufferGeometry>();\n  const [groundMaterialRef, groundMaterial] = useResource<MeshStandardMaterial>();\n  const [normalMaterialRef, normalMaterial] = useResource<MeshStandardMaterial>();\n  const [specialMaterialRef, specialMaterial] = useResource<MeshStandardMaterial>();\n  const [steelMaterialRef, steelMaterial] = useResource<MeshStandardMaterial>();\n  const [bombMaterialRef, bombMaterial] = useResource<MeshStandardMaterial>();\n  console.log('[GameCache] const');\n\n  React.useEffect(() => effectLoader(cubeGeometry, setCubeGeometry), [setCubeGeometry, cubeGeometry]);\n  React.useEffect(() => effectLoader(groundMaterial, setGroundMaterial), [setGroundMaterial, groundMaterial]);\n  React.useEffect(() => effectLoader(normalMaterial, setNormalMaterial), [setNormalMaterial, normalMaterial]);\n  React.useEffect(() => effectLoader(specialMaterial, setSpecialMaterial), [setSpecialMaterial, specialMaterial]);\n  React.useEffect(() => effectLoader(steelMaterial, setSteelMaterial), [setSteelMaterial, steelMaterial]);\n  React.useEffect(() => effectLoader(bombMaterial, setBombMaterial), [setBombMaterial, bombMaterial]);\n\n  return (\n    <React.Fragment>\n      <boxBufferGeometry ref={cubeGeometryRef} args={[1, 1, 1]} />\n      <meshStandardMaterial ref={groundMaterialRef} color=\"black\" transparent wireframe />\n      <meshStandardMaterial ref={normalMaterialRef} color=\"gray\" transparent />\n      <meshStandardMaterial ref={specialMaterialRef} color=\"green\" transparent />\n      <meshStandardMaterial ref={steelMaterialRef} color=\"black\" transparent />\n      <meshStandardMaterial ref={bombMaterialRef} color=\"orange\" transparent />\n      {cubeGeometry && groundMaterial && normalMaterial && specialMaterial && steelMaterial && bombMaterial && props.children}\n    </React.Fragment>\n  );\n};\n\nconst effectLoader = (object: any, setter: (arg: any) => void) => {\n  if (object) {\n    console.log('[GameCache] useEffect', object);\n    setter(object);\n  }\n};","import * as React from 'react';\nimport { Vector3, Mesh, Material, Quaternion } from 'three';\nimport { useGameStore } from './GameStore';\nimport { useFrame } from 'react-three-fiber';\n\nexport type CubeProps = {\n  uuid: string;\n  type: string;\n  position: Vector3;\n  rotation: Quaternion;\n  scale: Vector3;\n  selected: boolean;\n};\n\nexport const Cube = React.memo(({ type, position, rotation, scale, selected }: CubeProps) => {\n  const mesh = React.useRef<Mesh>(null!);\n  const [material, setMaterial] = React.useState<Material>(null!);\n  const cubeGeometry = useGameStore(s => s.cubeGeometry);\n  const groundMaterial = useGameStore(s => s.groundMaterial)!;\n  const normalMaterial = useGameStore(s => s.normalMaterial)!;\n  const specialMaterial = useGameStore(s => s.specialMaterial)!;\n  const steelMaterial = useGameStore(s => s.steelMaterial)!;\n  const bombMaterial = useGameStore(s => s.bombMaterial)!;\n  console.log('[Cube] const');\n\n  React.useEffect(() => {\n    if (selected) {\n      setMaterial(bombMaterial);\n    } else {\n      switch (type) {\n        case 'pl':\n        case 'no':\n          setMaterial(normalMaterial);\n          break;\n        case 'sp':\n          setMaterial(specialMaterial);\n          break;\n        case 'st':\n          setMaterial(steelMaterial);\n          break;\n        case 'gr':\n        default:\n          setMaterial(groundMaterial);\n          break;\n      }\n    }\n  }, [setMaterial, type, selected, cubeGeometry, groundMaterial, normalMaterial, specialMaterial, steelMaterial, bombMaterial]);\n\n  useFrame(() => {\n    mesh.current.position.copy(position);\n    mesh.current.quaternion.copy(rotation);\n    mesh.current.scale.copy(scale);\n  });\n\n  return (\n    <mesh\n      ref={mesh}\n      geometry={cubeGeometry}\n      material={material}\n    />\n  );\n});","import * as React from 'react';\nimport { useGameStore } from './GameStore';\nimport { Cube } from './Cube';\n\nexport const Level = () => {\n  const ground = useGameStore(s => s.ground);\n  const blocks = useGameStore(s => s.blocks);\n  const player = useGameStore(s => s.player);\n  console.log('[Level] const');\n\n  return (\n    <React.Fragment>\n      <group position={[0, -1, 0]}>\n        {ground.map(cube => (\n          <Cube key={cube.uuid} {...cube} />\n        ))}\n      </group>\n      {blocks.map(cube => (\n        <Cube key={cube.uuid} {...cube} />\n      ))}\n      <Cube {...player} />\n    </React.Fragment>\n  );\n};","import * as React from 'react';\nimport { useSpring } from 'react-spring';\n\nexport type AnimationProps = {\n  duration: number;\n  onFrame: (value: number) => void;\n  onRest: () => void;\n};\n\nexport const Animation = React.memo(({ duration, onFrame, onRest }: AnimationProps) => {\n  console.log('[Animation] const');\n\n  useSpring({\n    config: { duration: duration },\n    from: { opacity: 0.0 },\n    to: { opacity: 1.0 },\n    reset: true,\n    onRest: onRest,\n    onFrame: (props: any) => onFrame(props.opacity)\n  });\n\n  return <React.Fragment />;\n});","import * as React from 'react';\nimport { useGameStore } from './GameStore';\nimport { Animation } from './Animation';\nimport { useKey } from './Utils';\n\nexport const GameControls = () => {\n  const tryMovePlayer = useGameStore(s => s.tryMovePlayer);\n  const placeBomb = useGameStore(s => s.placeBomb);\n  const animation = useGameStore(s => s.animation);\n  const wPressed = useKey('w');\n  const aPressed = useKey('a');\n  const sPressed = useKey('s');\n  const dPressed = useKey('d');\n  const spacePressed = useKey(' ');\n\n  React.useEffect(() => {\n    const checkInput = () => {\n      if (wPressed && tryMovePlayer([0, 0, -1])) return;\n      if (aPressed && tryMovePlayer([-1, 0, 0])) return;\n      if (sPressed && tryMovePlayer([0, 0, 1])) return;\n      if (dPressed && tryMovePlayer([1, 0, 0])) return;\n      if (spacePressed) { placeBomb(); return; }\n    };\n\n    if (!animation) {\n      checkInput();\n    }\n  }, [animation, wPressed, aPressed, sPressed, dPressed, spacePressed, tryMovePlayer, placeBomb]);\n\n  if (!animation) {\n    return <React.Fragment />;\n  }\n\n  return <Animation {...animation} />;\n};","import * as React from 'react';\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { extend, Canvas, useThree, useFrame } from 'react-three-fiber';\nimport { GameCache } from './GameCache';\nimport { Level } from './Level';\nimport { GameControls } from './GameControls';\n\nextend({ OrbitControls });\n\nconst OrbitControlsElement = () => {\n  const controls = React.useRef<OrbitControls>(null!);\n  const { camera, gl: { domElement } } = useThree();\n  console.log('[OrbitControlsElement] const');\n\n  useFrame(() => controls.current.update());\n\n  return (\n    <orbitControls\n      ref={controls}\n      args={[camera, domElement]}\n    />\n  );\n};\n\nexport const Game = () => {\n  console.log('[Game] const');\n\n  return (\n    <Canvas>\n      <ambientLight />\n      <pointLight position={[10, 10, 10]} />\n      <OrbitControlsElement />\n      <GameControls />\n      <GameCache>\n        <Level />\n      </GameCache>\n    </Canvas>\n  );\n};","import React from 'react';\nimport { Game } from './icecube/Game';\n\nfunction App() {\n  return (\n    <div className=\"vh-100 vw-100\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}