{"version":3,"sources":["rubix/GameStore.ts","rubix/Arrow.tsx","rubix/Cube.tsx","rubix/ThreeOrbitControls.tsx","rubix/Animation.tsx","rubix/GameAnimationPlayer.tsx","rubix/GameCache.tsx","rubix/GameCanvas.tsx","rubix/Game.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Colors","Vectors","right","Vector3","left","up","down","front","back","zero","useGameStore","create","set","get","ready","cubes","animations","cache","mainAnimationId","uuidv4","dummy","Object3D","actions","init","Array","from","utils","generateCubes","shuffle","twistable","filter","x","arrows","length","count","cube","getRandomInt","arrow","twistCube","axis","positive","updateCache","partial","addAnimations","removeAnimation","uuid","twist","find","animate","clone","applyQuaternion","rotation","round","Math","abs","push","rubix","y","z","angle","MathUtils","DEG2RAD","rotate","Quaternion","setFromAxisAngle","frames","map","makeRotationTo","onRest","forEach","stickers","xx","getAllFaceColors","every","equals","console","log","duration","onFrame","value","slerp","makeCube","getFaceColors","direction","sticker","color","cubeSize","stickerSize","position","stickerArgs","makeCubeProps","size","add","multiplyScalar","copy","makeSticker","cubePosition","makeArrow","makeArrows","makeGeometry","vertices","faces","Color","dir1","dir2","diagonal","cross","makeArrowProps","dir","applyAxisAngle","minx","maxx","miny","maxy","minz","maxz","Face3","vertex","indices","quaternion","rotateOnWorldAxis","min","max","ceil","floor","random","cyan","black","green","Arrow","mesh","React","shapeMaterial","outlineMaterial","s","useFrame","current","onPointerMove","e","stopPropagation","onPointerOut","onClick","ref","attach","wireframe","Cube","key","index","extend","OrbitControls","ThreeOrbitControls","controls","useThree","camera","domElement","gl","update","args","Animation","remove","children","useSpring","config","opacity","to","reset","props","GameAnimationPlayer","animation","GameCache","GameCanvas","Game","className","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2d7e55f6.chunk.js","sourcesContent":["import create from 'zustand';\nimport { v4 as uuidv4 } from 'uuid';\nimport { AnimationProps } from './Animation';\nimport { CubeProps } from './Cube';\nimport { Vector3, Quaternion, Color, MathUtils, Face3, Object3D } from 'three';\nimport { ArrowProps } from './Arrow';\n\nexport type GameStoreCache = {\n  mainAnimationId: string;\n  dummy: Object3D;\n};\n\nexport type GameStoreActions = {\n  init(): void;\n  shuffle(): void;\n  updateCache: (partial: Partial<GameStoreCache>) => void;\n  addAnimations(...animations: AnimationProps[]): void;\n  removeAnimation(uuid: string): void;\n  twist(uuid: string, axis: Vector3, positive: boolean): void;\n  twistCube(cube: CubeProps, axis: Vector3, positive: boolean, animate: boolean): void;\n};\n\nexport type GameStoreUtils = {\n  generateCubes(): Generator<CubeProps, void, unknown>;\n  getFaceColors(direction: Vector3): Generator<Color, void, unknown>;\n  getAllFaceColors(): Generator<Color[], void, unknown>;\n};\n\nexport type GameStore = {\n  ready: boolean;\n  cubes: CubeProps[];\n  animations: AnimationProps[];\n  cache: GameStoreCache;\n  actions: GameStoreActions;\n  utils: GameStoreUtils;\n};\n\nconst Colors = {\n  R: 'red',\n  L: 'orange',\n  U: 'white',\n  D: 'blue',\n  F: 'green',\n  B: 'yellow'\n};\nconst Vectors = {\n  right: new Vector3(1, 0, 0),\n  left: new Vector3(-1, 0, 0),\n  up: new Vector3(0, 1, 0),\n  down: new Vector3(0, -1, 0),\n  front: new Vector3(0, 0, 1),\n  back: new Vector3(0, 0, -1),\n  zero: new Vector3(0, 0, 0)\n};\n\nexport const useGameStore = create<GameStore>((set, get) => ({\n  ready: false,\n  cubes: [],\n  animations: [],\n  cache: {\n    mainAnimationId: uuidv4(),\n    dummy: new Object3D()\n  },\n  actions: {\n    init: () => {\n      set({ ready: true, cubes: Array.from(get().utils.generateCubes()) });\n      get().actions.shuffle();\n    },\n    shuffle: () => {\n      const twistable = get().cubes.filter(x => x.arrows.length > 0);\n      let count = 0;\n      while (count < 500) {\n        const cube = twistable[getRandomInt(0, twistable.length)];\n        const arrow = cube.arrows[getRandomInt(0, cube.arrows.length)];\n        get().actions.twistCube(cube, arrow.axis, arrow.positive, false);\n        count++;\n      }\n    },\n    updateCache: (partial: Partial<GameStoreCache>) => set({ cache: { ...get().cache, ...partial } }),\n    addAnimations: (...animations: AnimationProps[]) => set({ animations: [...get().animations, ...animations] }),\n    removeAnimation: (uuid: string) => set({ animations: get().animations.filter(x => x.uuid !== uuid) }),\n    twist: (uuid: string, axis: Vector3, positive: boolean) => {\n      const cube = get().cubes.find(x => x.uuid === uuid);\n      if (cube) {\n        get().actions.twistCube(cube, axis, positive, true);\n      }\n    },\n    twistCube: (cube: CubeProps, axis: Vector3, positive: boolean, animate: boolean) => {\n      axis = axis.clone().applyQuaternion(cube.rotation).round();\n      const cubes: CubeProps[] = [];\n      if (Math.abs(axis.x) > 0) {\n        cubes.push(...get().cubes.filter(x => x.rubix.x === cube.rubix.x));\n      } else if (Math.abs(axis.y) > 0) {\n        cubes.push(...get().cubes.filter(x => x.rubix.y === cube.rubix.y));\n      } else if (Math.abs(axis.z) > 0) {\n        cubes.push(...get().cubes.filter(x => x.rubix.z === cube.rubix.z));\n      }\n      const dummy = get().cache.dummy;\n      const angle = (positive ? 90 : -90) * MathUtils.DEG2RAD;\n      const rotate = new Quaternion().setFromAxisAngle(axis, angle);\n      const frames = cubes.map(x => [x.rotation.clone(), makeRotationTo(x, dummy, axis, angle), x.rotation]);\n      const onRest = () => {\n        cubes.forEach(x => {\n          x.rubix.applyQuaternion(rotate).round();\n          x.stickers.forEach(xx => xx.rubix.applyQuaternion(rotate).round());\n        });\n        if (animate) {\n          if (Array.from(get().utils.getAllFaceColors()).every(x => x.every(xx => xx.equals(x[0])))) {\n            console.log('win');\n          }\n        }\n      };\n      if (animate) {\n        get().actions.addAnimations({\n          uuid: get().cache.mainAnimationId,\n          duration: 250,\n          onFrame: value => frames.forEach(x => Quaternion.slerp(x[0], x[1], x[2], value)),\n          onRest: onRest\n        });\n      } else {\n        frames.forEach(x => Quaternion.slerp(x[0], x[1], x[2], 1));\n        onRest();\n      }\n    }\n  },\n  utils: {\n    *generateCubes() {\n      for (let x = -1; x <= 1; x++) {\n        for (let y = -1; y <= 1; y++) {\n          for (let z = -1; z <= 1; z++) {\n            if (!(x === 0 && y === 0 && z === 0)) {\n              yield makeCube(x, y, z);\n            }\n          }\n        }\n      }\n    },\n    *getFaceColors(direction: Vector3) {\n      for (const cube of get().cubes) {\n        for (const sticker of cube.stickers) {\n          if (direction.equals(sticker.rubix)) {\n            yield sticker.color;\n          }\n        }\n      }\n    },\n    *getAllFaceColors() {\n      yield Array.from(get().utils.getFaceColors(Vectors.right));\n      yield Array.from(get().utils.getFaceColors(Vectors.left));\n      yield Array.from(get().utils.getFaceColors(Vectors.up));\n      yield Array.from(get().utils.getFaceColors(Vectors.down));\n      yield Array.from(get().utils.getFaceColors(Vectors.front));\n      yield Array.from(get().utils.getFaceColors(Vectors.back));\n    }\n  }\n}));\n\nconst cubeSize: [number, number, number] = [0.9, 0.9, 0.9];\nconst stickerSize: [number, number, number] = [0.75, 0.75, 0.75];\n\nfunction makeCube(x: number, y: number, z: number): CubeProps {\n  const position = new Vector3(x, y, z);\n  const stickerArgs: [string, Vector3][] = [];\n  switch (x) {\n    case 1: stickerArgs.push([Colors.R, Vectors.right]); break;\n    case -1: stickerArgs.push([Colors.L, Vectors.left]); break;\n  }\n  switch (y) {\n    case 1: stickerArgs.push([Colors.U, Vectors.up]); break;\n    case -1: stickerArgs.push([Colors.D, Vectors.down]); break;\n  }\n  switch (z) {\n    case 1: stickerArgs.push([Colors.F, Vectors.front]); break;\n    case -1: stickerArgs.push([Colors.B, Vectors.back]); break;\n  }\n  return makeCubeProps(cubeSize, 'gray', stickerArgs, position);\n}\n\nfunction makeSticker(position: Vector3, color: string, direction: Vector3) {\n  const size: [number, number, number] = [stickerSize[0], stickerSize[1], stickerSize[2]];\n  switch (direction.x) {\n    case 1:\n    case -1: size[0] = 0.05; break;\n  }\n  switch (direction.y) {\n    case 1:\n    case -1: size[1] = 0.05; break;\n  }\n  switch (direction.z) {\n    case 1:\n    case -1: size[2] = 0.05; break;\n  }\n  const sticker = makeCubeProps(size, color, [], position.clone().add(direction.clone().multiplyScalar(0.475)));\n  sticker.rubix.copy(direction);\n  return sticker;\n}\n\nfunction makeCubeProps(size: [number, number, number], color: string, stickerArgs: [string, Vector3][], position: Vector3): CubeProps {\n  const uuid = uuidv4();\n  const stickers = stickerArgs.map(x => makeSticker(position, x[0], x[1]));\n  const arrows = makeArrows(position, uuid, stickerArgs);\n  const [vertices, faces] = makeGeometry(size, position);\n  return {\n    uuid: uuid,\n    vertices: vertices,\n    faces: faces,\n    color: new Color(color),\n    stickers: stickers,\n    arrows: arrows,\n    rotation: new Quaternion(0, 0, 0, 1),\n    rubix: position.clone()\n  };\n}\n\nfunction makeArrows(cubePosition: Vector3, cube: string, stickerArgs: [string, Vector3][]) {\n  const arrows: ArrowProps[] = [];\n  if (stickerArgs.length === 3) {\n    arrows.push(...makeArrow(cubePosition, cube, stickerArgs[0][1], stickerArgs[1][1]));\n    arrows.push(...makeArrow(cubePosition, cube, stickerArgs[1][1], stickerArgs[2][1]));\n    arrows.push(...makeArrow(cubePosition, cube, stickerArgs[0][1], stickerArgs[2][1]));\n  } else if (stickerArgs.length === 2) {\n    arrows.push(...makeArrow(cubePosition, cube, stickerArgs[0][1], stickerArgs[1][1]));\n  }\n  return arrows;\n}\n\nfunction makeArrow(cubePosition: Vector3, cube: string, dir1: Vector3, dir2: Vector3): [ArrowProps, ArrowProps] {\n  const diagonal = dir1.clone().multiplyScalar(0.6).add(dir2.clone().multiplyScalar(0.6));\n  const axis = dir1.clone().cross(dir2);\n  return [\n    makeArrowProps(cubePosition, cube, diagonal, axis, dir2, true),\n    makeArrowProps(cubePosition, cube, diagonal, axis, dir1, false)\n  ];\n}\n\nfunction makeArrowProps(cubePosition: Vector3, cube: string, diagonal: Vector3, axis: Vector3, dir: Vector3, positive: boolean) {\n  const size: [number, number, number] = [0.2, 0.2, 0.2];\n  const angle = (positive ? 90 : -90) * MathUtils.DEG2RAD;\n  const direction = diagonal.clone().applyAxisAngle(axis, angle);\n  const position = cubePosition.clone().add(diagonal.clone().add(direction.clone().multiplyScalar(0.15)));\n  const [vertices, faces] = makeGeometry(size, Vectors.zero, dir);\n  return {\n    vertices: vertices,\n    faces: faces,\n    cube: cube,\n    axis: axis,\n    positive: positive,\n    position: position,\n    rotation: new Quaternion().setFromAxisAngle(axis, (positive ? 45 : -45) * MathUtils.DEG2RAD)\n  };\n}\n\nfunction makeGeometry(size: [number, number, number], position: Vector3, dir?: Vector3): [Vector3[], Face3[]] {\n  const minx = position.x - (size[0] / 2);\n  const maxx = position.x + (size[0] / 2);\n  const miny = position.y - (size[1] / 2);\n  const maxy = position.y + (size[1] / 2);\n  const minz = position.z - (size[2] / 2);\n  const maxz = position.z + (size[2] / 2);\n  const vertices = [\n    new Vector3(minx, miny, maxz),\n    new Vector3(minx, maxy, maxz),\n    new Vector3(maxx, maxy, maxz),\n    new Vector3(maxx, miny, maxz),\n    new Vector3(minx, miny, minz),\n    new Vector3(minx, maxy, minz),\n    new Vector3(maxx, maxy, minz),\n    new Vector3(maxx, miny, minz),\n  ];\n  const faces = [\n    new Face3(0, 2, 1),\n    new Face3(0, 3, 2),\n    new Face3(3, 6, 2),\n    new Face3(3, 7, 6),\n    new Face3(4, 1, 5),\n    new Face3(4, 0, 1),\n    new Face3(7, 5, 6),\n    new Face3(7, 4, 5),\n    new Face3(1, 6, 5),\n    new Face3(1, 2, 6),\n    new Face3(4, 3, 0),\n    new Face3(4, 7, 3)\n  ];\n  if (dir) {\n    const vertex = vertices.length;\n    const length = (size[0] + size[1] + size[2]) / 3;\n    const indices: number[] = [];\n    if (dir.x > 0) indices.push(3, 2, 6, 7);\n    if (dir.x < 0) indices.push(4, 5, 1, 0);\n    if (dir.y > 0) indices.push(1, 5, 6, 2);\n    if (dir.y < 0) indices.push(4, 0, 3, 7);\n    if (dir.z > 0) indices.push(0, 1, 2, 3);\n    if (dir.z < 0) indices.push(7, 6, 5, 4);\n    vertices.push(\n      position.clone().add(dir.clone().multiplyScalar(length / 2).add(dir.clone().multiplyScalar(length)))\n    );\n    faces.push(\n      new Face3(indices[0], indices[3], vertex),\n      new Face3(indices[1], indices[0], vertex),\n      new Face3(indices[2], indices[1], vertex),\n      new Face3(indices[3], indices[2], vertex)\n    );\n  }\n  return [vertices, faces];\n}\n\nfunction makeRotationTo(cube: CubeProps, dummy: Object3D, axis: Vector3, angle: number) {\n  dummy.quaternion.copy(cube.rotation);\n  dummy.rotateOnWorldAxis(axis, angle);\n  return dummy.quaternion.clone();\n}\n\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min);\n}","import * as React from 'react';\nimport { Vector3, Mesh, Quaternion, MeshBasicMaterial, Color, Face3 } from 'three';\nimport { useFrame } from 'react-three-fiber';\nimport { useGameStore } from './GameStore';\n\nexport type ArrowProps = {\n  vertices: Vector3[];\n  faces: Face3[];\n  cube: string;\n  axis: Vector3;\n  positive: boolean;\n  position: Vector3;\n  rotation: Quaternion;\n};\n\nconst cyan = new Color(0x00ffff);\nconst black = new Color(0x000000);\nconst green = new Color(0x00ff00);\n\nexport const Arrow = ({ vertices, faces, cube, axis, positive, position, rotation }: ArrowProps) => {\n  const mesh = React.useRef<Mesh>(null!);\n  const shapeMaterial = React.useRef<MeshBasicMaterial>(null!);\n  const outlineMaterial = React.useRef<MeshBasicMaterial>(null!);\n  const { twist } = useGameStore(s => s.actions);\n  console.log('[Arrow] render');\n\n  useFrame(() => {\n    mesh.current.position.copy(position);\n    mesh.current.quaternion.copy(rotation);\n  });\n\n  return (\n    <mesh\n      onPointerMove={e => { e.stopPropagation(); shapeMaterial.current.color = green; }}\n      onPointerOut={e => { e.stopPropagation(); shapeMaterial.current.color = cyan; }}\n      onClick={e => { e.stopPropagation(); twist(cube, axis, positive); }}\n      ref={mesh}\n    >\n      <geometry attach=\"geometry\" vertices={vertices} faces={faces} />\n      <meshBasicMaterial ref={shapeMaterial} attach=\"material\" color={cyan} />\n      <mesh>\n        <geometry attach=\"geometry\" vertices={vertices} faces={faces} />\n        <meshBasicMaterial ref={outlineMaterial} attach=\"material\" color={black} wireframe />\n      </mesh>\n    </mesh>\n  );\n};","import * as React from 'react';\nimport { Vector3, Mesh, Quaternion, Color, Face3 } from 'three';\nimport { useFrame } from 'react-three-fiber';\nimport { ArrowProps, Arrow } from './Arrow';\n\nexport type CubeProps = {\n  uuid: string;\n  vertices: Vector3[];\n  faces: Face3[];\n  color: Color;\n  stickers: CubeProps[];\n  arrows: ArrowProps[];\n  rotation: Quaternion;\n  rubix: Vector3;\n};\n\nexport const Cube = ({ vertices, faces, color, stickers, arrows, rotation }: CubeProps) => {\n  const mesh = React.useRef<Mesh>(null!);\n  console.log('[Cube] render');\n\n  useFrame(() => {\n    mesh.current.quaternion.copy(rotation);\n  });\n\n  return (\n    <mesh\n      onPointerMove={e => e.stopPropagation()}\n      onClick={e => e.stopPropagation()}\n      ref={mesh}\n    >\n      <geometry attach=\"geometry\" vertices={vertices} faces={faces} />\n      <meshBasicMaterial attach=\"material\" color={color} />\n      <mesh\n        onPointerMove={e => e.stopPropagation()}\n        onClick={e => e.stopPropagation()}\n      >\n        <geometry attach=\"geometry\" vertices={vertices} faces={faces} />\n        <meshBasicMaterial attach=\"material\" color=\"black\" wireframe />\n      </mesh>\n      {stickers.map(cube => (\n        <Cube key={cube.uuid} {...cube} />\n      ))}\n      {arrows.map((arrow, index) => (\n        <Arrow key={index} {...arrow} />\n      ))}\n    </mesh>\n  );\n};","import * as React from 'react';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nextend({ OrbitControls });\n\nexport const ThreeOrbitControls = () => {\n  const controls = React.useRef<OrbitControls>(null!);\n  const { camera, gl: { domElement } } = useThree();\n  console.log('[ThreeOrbitControls] const');\n\n  useFrame(() => controls.current.update());\n\n  return (\n    <orbitControls\n      ref={controls}\n      args={[camera, domElement]}\n    />\n  );\n};","import * as React from 'react';\nimport { useSpring } from 'react-spring';\n\nexport type AnimationProps = React.PropsWithChildren<{\n  uuid: string;\n  duration: number;\n  onFrame: (value: number) => void;\n  onRest?: () => void;\n  remove?: (uuid: string) => void;\n}>;\n\nexport const Animation = React.memo(({ uuid, duration, onFrame, onRest, remove, children }: AnimationProps) => {\n  console.log('[Animation] const');\n\n  useSpring({\n    config: { duration: duration },\n    from: { opacity: 0.0 },\n    to: { opacity: 1.0 },\n    reset: true,\n    onRest: () => {\n      if (onRest) {\n        onRest();\n      }\n      if (remove) {\n        remove(uuid);\n      }\n    },\n    onFrame: (props: any) => onFrame(props.opacity)\n  });\n\n  React.useEffect(() => {\n    console.log('[Animation] mount', uuid);\n    return () => console.log('[Animation] unmount', uuid);\n  }, [uuid]);\n\n  return (\n    <React.Fragment>\n      {children && children}\n    </React.Fragment>\n  );\n});","import * as React from 'react';\nimport { useGameStore } from './GameStore';\nimport { Animation } from './Animation';\n\nexport const GameAnimationPlayer = () => {\n  const { removeAnimation } = useGameStore(s => s.actions);\n  const animations = useGameStore(s => s.animations);\n  console.log('[GameAnimationPlayer] render');\n\n  return (\n    <React.Fragment>\n      {animations.map(animation => (\n        <Animation key={animation.uuid} {...animation} remove={removeAnimation} />\n      ))}\n    </React.Fragment>\n  );\n};","import * as React from 'react';\n\nexport type GameCacheProps = React.PropsWithChildren<{}>;\n\nexport const GameCache = ({ children }: GameCacheProps) => {\n  console.log('[GameCache] render');\n\n  return (\n    <React.Fragment>\n      {children && children}\n    </React.Fragment>\n  );\n};","import * as React from 'react';\nimport { Canvas } from 'react-three-fiber';\nimport { useGameStore } from './GameStore';\nimport { Cube } from './Cube';\nimport { ThreeOrbitControls } from './ThreeOrbitControls';\nimport { GameAnimationPlayer } from './GameAnimationPlayer';\nimport { GameCache } from './GameCache';\n\nexport const GameCanvas = () => {\n  const cubes = useGameStore(s => s.cubes);\n  console.log('[GameCanvas] render');\n\n  return (\n    <Canvas camera={{ position: [0, 0, 5] }}>\n      <ambientLight />\n      <pointLight position={[10, 10, 10]} />\n      <ThreeOrbitControls />\n      <GameAnimationPlayer />\n      <GameCache>\n        {cubes.map(cube => (\n          <Cube key={cube.uuid} {...cube} />\n        ))}\n      </GameCache>\n    </Canvas>\n  );\n};","import * as React from 'react';\nimport { GameCanvas } from './GameCanvas';\nimport { useGameStore } from './GameStore';\n\nexport const Game = () => {\n  const ready = useGameStore(s => s.ready);\n  const { init } = useGameStore(s => s.actions);\n  console.log('[Game] render');\n\n  React.useEffect(() => init(), [init]);\n\n  return (\n    <div className=\"vw-100 vh-100\">\n      {ready && <GameCanvas />}\n    </div>\n  );\n};","import React from 'react';\nimport { Game } from './rubix/Game';\n\nfunction App() {\n  return (\n    <Game />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}